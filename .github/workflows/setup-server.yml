name: 1. Setup Server

on:
  workflow_dispatch:

jobs:
  install-platform:
    runs-on: ubuntu-latest
    steps:
      - name: Connect to server and install software
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGE_SERVER_HOST }}
          username: ${{ secrets.STAGE_SERVER_USERNAME }}
          port: 22
          password: ${{ secrets.STAGE_SERVER_PASSWORD}}
          script: |
            # Check if Docker is installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              curl -fsSL https://get.docker.com/ | sudo sh
              sudo usermod -aG docker $USER
              echo "Docker installed. You may need to log out and log back in for group changes to take effect."
              # Note: Changes to user groups won't take effect until next login
              # For this run, we'll use sudo for docker commands
            else
              echo "Docker is already installed"
            fi

            # Check if Docker Compose is already installed
            if ! command -v docker-compose &> /dev/null
            then
              echo "Docker Compose not found, installing..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
            else
              echo "Docker Compose is already installed."
            fi

            # Check if Swarm is initialized

            if ! docker info | grep -q "Swarm: active"; then
              echo "Swarm not initialized. Initializing now..."
              sudo docker swarm init
            else
              echo "Swarm is already active"
            fi

            # Check if Nginx Proxy Manager is already installed
            if [ -d "/nginx-proxy-manager" ]; then
              echo "Nginx Proxy Manager is already installed."
            else
              echo "Nginx Proxy Manager not found, installing..."
              mkdir ~/nginx-proxy-manager && cd ~/nginx-proxy-manager

            # Install and start Docker proxy manager  
            docker run -d \
              --name nginx-proxy-manager \
              --restart unless-stopped \
              -p 80:80 \
              -p 81:81 \
              -p 443:443 \
              -v $(pwd)/data:/data \
              -v $(pwd)/letsencrypt:/etc/letsencrypt \
              jc21/nginx-proxy-manager:latest

              echo "Docker Compose file created."
            fi

            # location /backend-service/ {
            #     # Proxy settings if use the same domain
            #     proxy_pass http://103.146.22.228:3500/;
                
            #     # Remove /backend-service/ prefix when forwarding
            #     rewrite ^/backend-service/(.*) /$1 break;
                
            #     # Standard proxy headers
            #     proxy_http_version 1.1;
            #     proxy_set_header Upgrade $http_upgrade;
            #     proxy_set_header Host $host;
            #     proxy_set_header X-Real-IP $remote_addr;
            #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #     proxy_set_header X-Forwarded-Proto $scheme;
                
            #     # WebSocket support
            #     proxy_set_header Connection "Upgrade";
                
            #     # Timeouts
            #     proxy_connect_timeout 60s;
            #     proxy_send_timeout 60s;
            #     proxy_read_timeout 60s;
            # }


            # Install docker rollout for zero time deployments
            # Create directory for Docker cli plugins
            mkdir -p ~/.docker/cli-plugins
            
            # Download docker-rollout script to Docker cli plugins directory
            curl https://raw.githubusercontent.com/wowu/docker-rollout/master/docker-rollout -o ~/.docker/cli-plugins/docker-rollout
            
            # Make the script executable
            chmod +x ~/.docker/cli-plugins/docker-rollout

            echo "Reboot server to make docker can run without need root"
            sudo reboot
